# -*- coding: utf-8 -*-
"""Omicorn-virus-visualization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1byC4Eqj0CQqusdA9IJxdXzPKSPHbQW9C
"""

!pip install pandas 
!pip install matplotlib
!pip install seaborn 
!pip install matplotlib

!pip install DataFrame

# Commented out IPython magic to ensure Python compatibility.
import numpy as np # linear alegbra 
import pandas as pd
import matplotlib.pyplot as plt 
# %matplotlib inline 
import seaborn as sns 
from datetime import timedelta

pd.plotting.register_matplotlib_converters()

filepath = './Data/covid-variants.csv'
region_filepath = './Data/continents2.csv'
pop_filepath = './Data/2021_population.csv'

df = pd.read_csv(filepath)
region = pd.read_csv(region_filepath)
pop = pd.read_csv(pop_filepath)

df.head()

df.info()

"""we need to fix the dtype of data"""

df.date = pd.to_datetime(df.date)
df.info()

df.describe()

df.describe(include = 'object')

"""This dataset contains data on 24 variants in 121 countries """

first_omi_date = df[(df['variant'] == 'Omicron') & (df['num_sequences'] >0 )].date.min()
print(f'The first omicorn variant was discovered on {first_omi_date: %d-%b-%y}')

omi_by_date = df[(df['variant'] == 'Omicron')].groupby('date').agg({'num_sequences':'sum'})
omi_by_date

"""Everything looks good now let's move on """

plt.figure(figsize =(12,6))
sns.lineplot(data = omi_by_date['num_sequences'])
plt.xlim(first_omi_date, df.date.max())
plt.title(f'Total number of omicorn case by date, from {first_omi_date: %d=%b=%y } to {df.date.max() : %d-%b-%y}')
plt.xlabel('Date')
plt.ylabel('Total number of Omicorn cases')

highest_omi_cases = omi_by_date[omi_by_date['num_sequences'] == omi_by_date['num_sequences'].max()]
print(f'The highest number of omicorn cases occured on {highest_omi_cases.index.date[0]: %d-%b-%y} with {highest_omi_cases.num_sequences[0]} cases recorded.')

omi_by_loca = df[(df['variant'] == 'Omicron')].groupby('location').agg({'num_sequences':'sum'}).sort_values('num_sequences', ascending = False)
omi_by_loca_notnull = omi_by_loca[omi_by_loca.num_sequences > 0]
omi_by_loca_notnull.describe()

plt.figure(figsize = (6,18))
sns.barplot(x = omi_by_loca_notnull.num_sequences, y= omi_by_loca_notnull.index )
plt.title('Total number of Omicorn cases, by country')

omi_uk = df[(df['location'] == 'United Kingdom') & (df['variant'] == 'Omicron')]

plt.figure(figsize = (12,6))
sns.lineplot(data = omi_uk, x = 'date', y = 'num_sequences', label = 'UK')
sns.lineplot(data = omi_by_date ['num_sequences'], label = 'All locations')
plt.xlim(first_omi_date, df.date.max())
plt.title(f'Total number of Omicorn cases processed by date, from {first_omi_date: %d-%b-%y} to {df.date.max(): %d-%b-%y}')
plt.xlabel('Date')
plt.ylabel('Total number of Omicorn Cases')

region.head()
region2 = region.iloc[:,[0,6]]

region2

"""renaming the name column to locaton for ease of merging """

region2 = region2.rename(columns = {'name':'location'})
region2

df2 = pd.merge(df, region2)
df2.head()

omi_by_reg = df2[df2.variant == 'Omicorn'].groupby('sub-region').agg({'num_sequences': 'sum'}).sort_values('num_sequences', ascending = False).reset_index()
omi_by_reg.style.set_caption('Omicron cases by sub-region')

"""it should print a whole list, but i don't know why it is not printing """

omi_by_date_reg = pd.pivot_table(df2[(df2.variant == 'Omicron') & (df2.date > first_omi_date)], 
                                 index='date',
                                 columns='sub-region',
                                 values='num_sequences',
                                 aggfunc='sum',
                                 fill_value = 0)
omi_by_date_reg

plt.figure(figsize = (8,8))
ax = sns.heatmap(data = omi_by_date_reg.transpose(), annot=True, fmt = 'd',cmap = 'Blues')
ax.set_xticklabels(omi_by_date_reg.index.strftime('%d-%b-%Y'))
plt.title('Number of Omicron cases by date and sub-region')

cov_by_var_reg= pd.pivot_table(df2, 
               index = 'sub-region',
               columns = 'variant',
               values = 'num_sequences',
               aggfunc = 'sum')

plt.figure(figsize = (24,8))
sns.heatmap(data = cov_by_var_reg, annot = True, fmt = 'd',cmap = 'Reds')
plt.title('Number of COVID19 cases by variant and sub-region')